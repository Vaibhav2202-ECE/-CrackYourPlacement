void dfs(vector<vector<char>>& grid,int i,int j,int n,int m){
        
        if((i<0 || i>n-1 ) || (j<0 || j>m-1)  || grid[i][j]!='1'){
            return;
        }
        if(grid[i][j]=='1'){
            
            grid[i][j]='0';
            //up
            dfs(grid,i,j-1,n,m);
            //down
            dfs(grid,i,j+1,n,m);
            //right
            dfs(grid,i+1,j,n,m);
            //left
            dfs(grid,i-1,j,n,m);
            //up-right
            dfs(grid,i+1,j-1,n,m);
            //up-left
            dfs(grid,i-1,j-1,n,m);
            //down-right
            dfs(grid,i+1,j+1,n,m);
            //down-left
            dfs(grid,i-1,j+1,n,m);
            
        }
    }
    int numIslands(vector<vector<char>>& grid) 
    {
        int n=grid.size();
        int m=grid[0].size();
        int count=0;
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                
                if(grid[i][j]=='1'){
                    count++;
                    dfs(grid,i,j,n,m);
                    
                }
            }
        }
        return count;
    }
