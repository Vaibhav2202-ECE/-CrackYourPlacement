class Solution {
public:
int solve(int i,int j, vector<vector<int>>& board){
    int count=0;
    count += (i-1>=0 && j-1>=0 && board[i-1][j-1]);
    count += (i-1>=0 && j>=0 && board[i-1][j]);
    count += (i-1>=0 && j+1<board[0].size() && board[i-1][j+1]);
    count += (i>=0 && j+1<board[0].size() && board[i][j+1]);
    count += (i+1<board.size() && j+1<board[0].size() && board[i+1][j+1]);
    count += (i+1<board.size() && j>=0 && board[i+1][j]);
    count += (i+1<board.size() && j-1>=0 && board[i+1][j-1]);
    count += (i>=0 && j-1>=0 && board[i][j-1]);
    
    return count;
}
    void gameOfLife(vector<vector<int>>& board) {
        
        vector<vector<int>>ans(board.size(),vector<int>(board[0].size(), 0));
        for(int i=0;i<board.size();i++){
            for(int j=0;j<board[0].size();j++){
                 int result=solve(i,j,board);
                 if(board[i][j]==0){
                    if(result==3)
                    ans[i][j]=1;
                 }
                 else{
                    if(result==2||result==3){
                     ans[i][j]=1;
                    }
                 }
            }
        }
        board = ans;
    }
};