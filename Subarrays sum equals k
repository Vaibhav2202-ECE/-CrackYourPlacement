class Solution {
public:
    int subarraySum(vector<int>& nums, int k) {
        int count=0;
        int currsum=0;
        int n=nums.size();
        unordered_map<int,int>mp;
        for(int i=0;i<n;i++){         
            currsum+=nums[i];
            if(currsum==k)
            count++;

            if(mp.find(currsum-k)!=mp.end()){
                count+=mp[currsum-k];
            }
            //add currsum value to count of different values of sum
            mp[currsum]++;
        }
        return count;
    }
};