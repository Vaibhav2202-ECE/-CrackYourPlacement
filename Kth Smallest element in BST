/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
   
   void helper(TreeNode* root,vector<int>&inOrder)
   {
        if(root==NULL)return;
        helper(root->left,inOrder);
        inOrder.push_back(root->val);
        helper(root->right,inOrder);
   }
    int kthSmallest(TreeNode* root, int k) {
        vector<int>inOrder;
        helper(root,inOrder);
        int ans;
        for(int i=1;i<=inOrder.size();i++){
            if(i!=k){
                continue;
            }
            else if(i==k){
                ans=inOrder[i-1];
                break;
            }
        }
        return ans;
    }
};