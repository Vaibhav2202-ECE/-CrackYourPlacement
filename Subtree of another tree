bool solve(TreeNode* r1,TreeNode* r2)
    {
        if(r1==nullptr && r2==nullptr)return true;
        if(r1==nullptr || r2==nullptr)return false;

        if(r1->val!=r2->val){
            return false;
        }
        return solve(r1->left,r2->left) && solve(r1->right,r2->right);
    }
    bool isSubtree(TreeNode* root, TreeNode* subRoot) {
        if(!root || !subRoot)return false;
        if(solve(root,subRoot))return true;

        return (isSubtree(root->left,subRoot)||isSubtree(root->right,subRoot));

    }