string serialize(TreeNode* root) {
        if(!root) return "";
        string s="";
        queue<TreeNode*>q;
        q.push(root);
        while(!q.empty()){
            TreeNode* curr=q.front();
            q.pop();

            if(curr==nullptr){
                s+="#,";
            }
            else{
                s+=to_string(curr->val)+",";
                //push one by one left part and right part of curr node
                q.push(curr->left);
                q.push(curr->right);
            }
        }
        return s;
    }

    // Decodes your encoded data to tree.
    TreeNode* deserialize(string data) {
        
        if(data.empty())return nullptr;

        stringstream s(data);
        string str;
        getline(s,str,',');

        queue<TreeNode*>q;
        TreeNode* root=new TreeNode(stoi(str));

        q.push(root);
        while(!q.empty()){
            TreeNode* node=q.front();
            q.pop();
            getline(s,str,',');

            if(str!="#")
            {
              TreeNode* leftNode=new TreeNode(stoi(str));
              node->left=leftNode;
              q.push(leftNode);
            }

            getline(s,str,',');

            if(str!="#")
            {
              TreeNode* rightNode=new TreeNode(stoi(str));
              node->right=rightNode;
              q.push(rightNode);
            }
        }
        return root;
    }